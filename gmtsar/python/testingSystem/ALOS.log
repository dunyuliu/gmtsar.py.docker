Generating config files for ALOS formats ... ...
/Users/m1hawks/gmtsar.py_testing/py.test/ALOS_Baja_EQ/raw
ledflag 1
.... swapping bytes
writing generic LED file: IMG-HH-ALPSRP207600640-H1.0__A.LED
.... calculating doppler for IMG-HH-ALPSRP207600640-H1.0__A.raw
 Working on line 2000 
 Working on line 4000 
 Working on line 6000 
 Working on line 8000 
 Working on line 10000 
 Working on line 12000 
 Working on line 14000 
 Working on line 16000 
 Working on line 18000 
 Working on line 20000 
 Working on line 22000 
 Working on line 24000 
 Working on line 26000 
 Working on line 28000 
 Working on line 30000 
 Working on line 32000 
 Working on line 34000 
 near_range, shift = 846717 192 
 setting fd1 to 40.647230 
 setting near_range to 846267.00 
 setting radius to 6372234.544894 
 setting npatches to 3 
 setting fd1 to 40.647230 
ledflag 1
.... swapping bytes
writing generic LED file: IMG-HH-ALPSRP227730640-H1.0__A.LED
 near_range, shift = 846717 96 
PREPROC: arg of cmd pre_proc is ['ALOS', 'IMG-HH-ALPSRP207600640-H1.0__A', 'IMG-HH-ALPSRP227730640-H1.0__A', '-skip_master', '0']
cmdAppendix is 
PREPROC: master is  IMG-HH-ALPSRP207600640-H1.0__A
PREPROC: aligned is  IMG-HH-ALPSRP227730640-H1.0__A
 
PREPROC: Pre-Process ALOS data -START
 
PREPROC: upack the master if necessary
 no file IMG-HH-ALPSRP207600640-H1.0__A.raw  # <--- this file exists - possibly a file path issue?
PREPROC: pre_process master image
 
ALOS_pre_process IMG-HH-ALPSRP207600640-H1.0__A LED-ALPSRP207600640-H1.0__A 
near_range		= 846267.000000 

earth_radius		= 6372234.544894 

fd1			= 40.647230 

num_patches		= 3 

PREPROC: unpack the alignedCut image using the same earth radius and near range as the masterCut image
 
ALOS_pre_process IMG-HH-ALPSRP227730640-H1.0__A LED-ALPSRP227730640-H1.0__A -fd1 40.64723 -near 846267.0 -radius 6372234.544894 -npatch 3 -fd1 40.64723
PREPROC: check the range sampling rate of the alignedCut images and            do conversion if necessary
rng_samp_rate   	= 32000000.000000 

rng_samp_rate		= 32000000.000000 

rng_samp_rate   	= 16000000.000000 

rng_samp_rate		= 16000000.000000 

PREPROC: Convert the ALPSRP227730640-H1.0__A image from FBD to FBS mode
 
ALOS_fbd2fbs IMG-HH-ALPSRP227730640-H1.0__A.PRM IMG-HH-ALPSRP227730640-H1.0__A_FBS.PRM
PREPROC: Overwriting the old ALPSRP227730640-H1.0__A image
mv IMG-HH-ALPSRP227730640-H1.0__A_FBS.PRM IMG-HH-ALPSRP227730640-H1.0__A.PRM
 
update_PRM IMG-HH-ALPSRP227730640-H1.0__A.PRM input_file IMG-HH-ALPSRP227730640-H1.0__A.raw
mv IMG-HH-ALPSRP227730640-H1.0__A_FBS.raw IMG-HH-ALPSRP227730640-H1.0__A.raw
IMG-HH-ALPSRP227730640-H1.0__A is converted to FBS mode
PREPROC: FINISHED ... ...
Computing range reference function.
Processing patch 1
Processing Elapsed Time: 0 min 0.32 sec
Range Compression
Processing Elapsed Time: 0 min 3.53 sec
Azimuthal Transform
Processing Elapsed Time: 0 min 8.23 sec
Range Migration
Processing Elapsed Time: 0 min 16.23 sec
Azimuthal Compression
Processing Elapsed Time: 0 min 32.18 sec
Writing Data
Processing patch 2
Processing Elapsed Time: 0 min 32.85 sec
Range Compression
Processing Elapsed Time: 0 min 35.66 sec
Azimuthal Transform
Processing Elapsed Time: 0 min 40.80 sec
Range Migration
Processing Elapsed Time: 0 min 48.60 sec
Azimuthal Compression
Processing Elapsed Time: 1 min 2.91 sec
Writing Data
Processing patch 3
Processing Elapsed Time: 1 min 3.65 sec
Range Compression
Processing Elapsed Time: 1 min 6.41 sec
Azimuthal Transform
Processing Elapsed Time: 1 min 11.09 sec
Range Migration
Processing Elapsed Time: 1 min 18.78 sec
Azimuthal Compression
Processing Elapsed Time: 1 min 33.20 sec
Writing Data
Processing Elapsed Time: 1 min 33.98 sec
number of points clipped to short int 27 
SARP: slcfile is  IMG-HH-ALPSRP207600640-H1.0__A.SLC
 
esarp IMG-HH-ALPSRP207600640-H1.0__A.PRM IMG-HH-ALPSRP207600640-H1.0__A.SLC > tmp_sarp
SARP: update the PRM file
SARP: put in dfact into PRM file
I2SCALE 8000000.000000 

 
update_PRM IMG-HH-ALPSRP207600640-H1.0__A.PRM SLC_scale 8000000.0
SARP: Finishing sarp ... ...
Computing range reference function.
Processing patch 1
Processing Elapsed Time: 0 min 0.32 sec
Range Compression
Processing Elapsed Time: 0 min 3.53 sec
Azimuthal Transform
Processing Elapsed Time: 0 min 8.15 sec
Range Migration
Processing Elapsed Time: 0 min 15.84 sec
Azimuthal Compression
Processing Elapsed Time: 0 min 30.28 sec
Writing Data
Processing patch 2
Processing Elapsed Time: 0 min 30.95 sec
Range Compression
Processing Elapsed Time: 0 min 33.70 sec
Azimuthal Transform
Processing Elapsed Time: 0 min 38.17 sec
Range Migration
Processing Elapsed Time: 0 min 45.87 sec
Azimuthal Compression
Processing Elapsed Time: 0 min 59.53 sec
Writing Data
Processing patch 3
Processing Elapsed Time: 1 min 0.27 sec
Range Compression
Processing Elapsed Time: 1 min 3.05 sec
Azimuthal Transform
Processing Elapsed Time: 1 min 7.69 sec
Range Migration
Processing Elapsed Time: 1 min 15.40 sec
Azimuthal Compression
Processing Elapsed Time: 1 min 30.24 sec
Writing Data
Processing Elapsed Time: 1 min 31.02 sec
number of points clipped to short int 31 
SARP: slcfile is  IMG-HH-ALPSRP227730640-H1.0__A.SLC
 
esarp IMG-HH-ALPSRP227730640-H1.0__A.PRM IMG-HH-ALPSRP227730640-H1.0__A.SLC > tmp_sarp
SARP: update the PRM file
SARP: put in dfact into PRM file
I2SCALE 4000000.000000 

 
update_PRM IMG-HH-ALPSRP227730640-H1.0__A.PRM SLC_scale 4000000.0
SARP: Finishing sarp ... ...
using command line
......master LED file IMG-HH-ALPSRP207600640-H1.0__A.LED 
.........aligned LED file IMG-HH-ALPSRP227730640-H1.0__A.LED 
 setting xsearch to 128
 setting nx_corr to 256
 setting ysearch to 128
 setting ny_corr to 256
 setting nx to 20
 setting ny to 50
 11304 27648 11304 27648 -139 66 0.000000
 locations  n 1000 nx 11304 nyl 50 nxl 20 x_inc 458 y_inc 527
 elapsed time: 85.813793 
CLEANUP - START ... ...
 
CLEANUP: clean up topo/ folder ... ...
 
CLEANUP - END ... ...
blockmedian [INFORMATION]: Provides 3, expects 3-column binary data
blockmedian [INFORMATION]: Processing input table data
blockmedian [INFORMATION]: Cartesian input grid
blockmedian [INFORMATION]: Cartesian input grid
blockmedian [INFORMATION]: W: 0 E: 11304 S: 0 N: 27648 n_columns: 5652 n_rows: 6912
blockmedian [INFORMATION]: Input 3 columns via binary records using format ddd
blockmedian [INFORMATION]: Output 3 columns via binary records using format ddd
blockmedian [INFORMATION]: Reading Data Table from Standard Input stream
blockmedian [INFORMATION]: Writing Data Table to Standard Output stream
blockmedian [INFORMATION]: Calculating block medians
blockmedian [INFORMATION]: N read: 9071166 N used: 9042865 outside_area: 28301 N cells filled: 8998351
surface [INFORMATION]: Provides 3, expects 3-column binary data
surface [INFORMATION]: Cartesian input grid
surface [INFORMATION]: Cartesian input grid
surface [INFORMATION]: Internally speed up convergence by using the larger region -R-109/11411/-2/27646 (go from 5652 x 6912 to optimal 5760 x 6912, with speedup-factor 1.0510781)
surface [INFORMATION]: Cartesian input grid
surface [INFORMATION]: Cartesian input grid
surface [INFORMATION]: Cartesian input grid
surface [INFORMATION]: Cartesian input grid
surface [INFORMATION]: Grid domain: W: 0 E: 11304 S: 0 N: 27648 n_columns: 5760 n_rows: 6912 [pixel registration]
surface [INFORMATION]: Processing input table data
surface [INFORMATION]: Input 3 columns via binary records using format ddd
surface [INFORMATION]: Reading Data Table from file temp.rat
surface [INFORMATION]: Minimum value of your dataset x,y,z at: 7494.85595703 27627.9453125 -533.92755127
surface [INFORMATION]: Maximum value of your dataset x,y,z at: 291.927764893 30.7201595306 1538.80505371
surface [INFORMATION]: Eliminate data points that are not nearest a node.
surface [WARNING]: 19244 unusable points were supplied; these will be ignored.
surface [WARNING]: You should have pre-processed the data with block-mean, -median, or -mode.
surface [WARNING]: Check that previous processing steps write results with enough decimals.
surface [WARNING]: Possibly some data were half-way between nodes and subject to IEEE 754 rounding.
surface [INFORMATION]: Plane fit z = 669.051 + (-0.155811 * col) + (-0.10283 * row)
surface [INFORMATION]: Normalize detrended data constraints by z rms = 291.825
surface [INFORMATION]: Select default convergence limit of 0.0291825 (100 ppm of L2 scale)
surface [INFORMATION]: Recompute data index for next iteration [stride = 1152]
surface [INFORMATION]: ------------------------------------------
surface [INFORMATION]: Memory for data array          :  205.5 Mb
surface [INFORMATION]: Memory for final grid          :  152.1 Mb
surface [INFORMATION]: Memory for Briggs coefficients :  205.5 Mb
surface [INFORMATION]: Memory for node status         :   38.0 Mb
surface [INFORMATION]: ------------------------------------------
surface [INFORMATION]: Total memory use               :  601.2 Mb
surface [INFORMATION]: ==========================================
surface [INFORMATION]: Grid	Mode	Iteration	Max Change	Conv Limit	Total Iterations
surface [INFORMATION]: Set finite-difference coefficients [stride = 1152]
surface [INFORMATION]: Determine nearest point and set Briggs coefficients [stride = 1152]
surface [INFORMATION]: 1152	D	       8	8.54854777956e-06	2.53319994142e-05	         8
surface [INFORMATION]: Recompute data index for next iteration [stride = 384]
surface [INFORMATION]: Expand grid by factor of 3 when going from stride = 1152 to 384
surface [INFORMATION]: Fill in expanded grid by bilinear interpolation [stride = 384]
surface [INFORMATION]:  384	I	      61	6.22607286763e-05	7.59959982426e-05	        69
surface [INFORMATION]: Determine nearest point and set Briggs coefficients [stride = 384]
surface [INFORMATION]:  384	D	      15	4.91238054057e-05	7.59959982426e-05	        84
surface [INFORMATION]: Recompute data index for next iteration [stride = 128]
surface [INFORMATION]: Expand grid by factor of 3 when going from stride = 384 to 128
surface [INFORMATION]: Fill in expanded grid by bilinear interpolation [stride = 128]
surface [INFORMATION]:  128	I	      59	0.000203813518424	0.000227987994728	       143
surface [INFORMATION]: Determine nearest point and set Briggs coefficients [stride = 128]
surface [INFORMATION]:  128	D	      16	0.000133929966018	0.000227987994728	       159
surface [INFORMATION]: Recompute data index for next iteration [stride = 64]
surface [INFORMATION]: Expand grid by factor of 2 when going from stride = 128 to 64
surface [INFORMATION]: Fill in expanded grid by bilinear interpolation [stride = 64]
surface [INFORMATION]:   64	I	      35	0.000352967956666	0.000455975989455	       194
surface [INFORMATION]: Determine nearest point and set Briggs coefficients [stride = 64]
surface [INFORMATION]:   64	D	      14	0.000245163509277	0.000455975989455	       208
surface [INFORMATION]: Recompute data index for next iteration [stride = 32]
surface [INFORMATION]: Expand grid by factor of 2 when going from stride = 64 to 32
surface [INFORMATION]: Fill in expanded grid by bilinear interpolation [stride = 32]
surface [INFORMATION]:   32	I	      32	0.000891353276306	0.000911951978911	       240
surface [INFORMATION]: Determine nearest point and set Briggs coefficients [stride = 32]
surface [INFORMATION]:   32	D	     110	0.000827959331854	0.000911951978911	       350
surface [INFORMATION]: Recompute data index for next iteration [stride = 16]
surface [INFORMATION]: Expand grid by factor of 2 when going from stride = 32 to 16
surface [INFORMATION]: Fill in expanded grid by bilinear interpolation [stride = 16]
surface [INFORMATION]:   16	I	      30	0.00174292817584	0.00182390395782	       380
surface [INFORMATION]: Determine nearest point and set Briggs coefficients [stride = 16]
surface [INFORMATION]:   16	D	     412	0.00182062380801	0.00182390395782	       792
surface [INFORMATION]: Recompute data index for next iteration [stride = 8]
surface [INFORMATION]: Expand grid by factor of 2 when going from stride = 16 to 8
surface [INFORMATION]: Fill in expanded grid by bilinear interpolation [stride = 8]
surface [INFORMATION]:    8	I	      27	0.00307566510274	0.00364780791564	       819
surface [INFORMATION]: Determine nearest point and set Briggs coefficients [stride = 8]
surface [INFORMATION]:    8	D	    1931	0.00364667381993	0.00364780791564	      2750
surface [INFORMATION]: Recompute data index for next iteration [stride = 4]
surface [INFORMATION]: Expand grid by factor of 2 when going from stride = 8 to 4
surface [INFORMATION]: Fill in expanded grid by bilinear interpolation [stride = 4]
surface [INFORMATION]:    4	I	      23	0.00641933174719	0.00729561583129	      2773
surface [INFORMATION]: Determine nearest point and set Briggs coefficients [stride = 4]
surface [INFORMATION]:    4	D	    2356	0.00729386048263	0.00729561583129	      5129
surface [INFORMATION]: Recompute data index for next iteration [stride = 2]
surface [INFORMATION]: Expand grid by factor of 2 when going from stride = 4 to 2
surface [INFORMATION]: Fill in expanded grid by bilinear interpolation [stride = 2]
surface [INFORMATION]:    2	I	      21	0.0112663877822	0.0145912316626	      5150
surface [INFORMATION]: Determine nearest point and set Briggs coefficients [stride = 2]
surface [INFORMATION]:    2	D	     644	0.0145873900992	0.0145912316626	      5794
surface [INFORMATION]: Recompute data index for next iteration [stride = 1]
surface [INFORMATION]: Expand grid by factor of 2 when going from stride = 2 to 1
surface [INFORMATION]: Fill in expanded grid by bilinear interpolation [stride = 1]
surface [INFORMATION]:    1	I	      16	0.0192463487554	0.0291824633251	      5810
surface [INFORMATION]: Determine nearest point and set Briggs coefficients [stride = 1]
surface [INFORMATION]:    1	D	      96	0.0288058644956	0.0291824633251	      5906
surface [INFORMATION]: Compute rms misfit and curvature.
surface [INFORMATION]: Fit info: N data points  N nodes	mean error	rms error	curvature
surface [INFORMATION]: 	 8979107	39825793	2.41361037464e-06	0.00334436115253	40133.8775378
surface [INFORMATION]: Increase pad by 54 54 0 0
surface [INFORMATION]: Writing grid to file pixel.grd
grd2cpt [INFORMATION]: Reading CPT from File /usr/local/Cellar/gmt/6.4.0_8/share/gmt/cpt/gmt/gray.cpt
grd2cpt [INFORMATION]: Processing input grid(s)
grd2cpt [INFORMATION]: netCDF grid topo_ra.grd has no default CPT.
grd2cpt [INFORMATION]: Cartesian input grid
grd2cpt [INFORMATION]: Reading grid from file topo_ra.grd
grd2cpt [INFORMATION]: Cartesian input grid
grd2cpt [INFORMATION]: gmt_grd_BC_set: Set boundary condition for all edges: natural
grd2cpt [INFORMATION]: gmt_grd_BC_set: Set boundary condition for left   edge: natural
grd2cpt [INFORMATION]: gmt_grd_BC_set: Set boundary condition for right  edge: natural
grd2cpt [INFORMATION]: gmt_grd_BC_set: Set boundary condition for bottom edge: natural
grd2cpt [INFORMATION]: gmt_grd_BC_set: Set boundary condition for top    edge: natural
grd2cpt [INFORMATION]: Mean and S.D. of data are -132.297527209 435.206416815
grd2cpt [INFORMATION]: z = -534.071594238 and CDF(z) = 0
grd2cpt [INFORMATION]: z = -383.122343838 and CDF(z) = 0.228698216378
grd2cpt [INFORMATION]: z = -79.1277008698 and CDF(z) = 0.788835676941
grd2cpt [INFORMATION]: z = 140.073824402 and CDF(z) = 0.857997708171
grd2cpt [INFORMATION]: z = 327.373445456 and CDF(z) = 0.885775230687
grd2cpt [INFORMATION]: z = 502.437896729 and CDF(z) = 0.902293679185
grd2cpt [INFORMATION]: z = 677.502348001 and CDF(z) = 0.91264921977
grd2cpt [INFORMATION]: z = 864.801969055 and CDF(z) = 0.922699512574
grd2cpt [INFORMATION]: z = 1084.00349433 and CDF(z) = 0.947012415176
grd2cpt [INFORMATION]: z = 1387.9981373 and CDF(z) = 0.997873939603
grd2cpt [INFORMATION]: z = 1538.9473877 and CDF(z) = 1
grd2cpt [INFORMATION]: Write CPT to Stream Standard output stream
grdimage [INFORMATION]: GMT_Parse_Options: Interval-setting -B options were reordered to appear before axis and frame -B options to ensure proper parsing.
grdimage [INFORMATION]: GMT_Parse_Options: New option order: topo_ra.grd -JX7i -P -Ctopo_ra.cpt -V -K -Bxaf+lRange -B"yaf+lReversed Azimuth" -BWSen
grdimage [INFORMATION]: Read header from file topo_ra.grd
grdimage [INFORMATION]: netCDF grid topo_ra.grd has no default CPT.
grdimage [INFORMATION]: Cartesian input grid
grdimage [INFORMATION]: Linear projection implies x-axis distance exaggeration relative to the y-axis by a factor of 0.408854
grdimage [INFORMATION]: Auto-frame interval for x-axis (item 0): a2000f1000
grdimage [INFORMATION]: Auto-frame interval for y-axis (item 0): a5000f1000
grdimage [INFORMATION]: Map scale is 0.635771 km per cm or 1:63577.1.
grdimage [INFORMATION]: Allocate and read data from file topo_ra.grd
grdimage [INFORMATION]: Reading grid from file topo_ra.grd
grdimage [INFORMATION]: Cartesian input grid
grdimage [INFORMATION]: gmt_grd_BC_set: Set boundary condition for all edges: natural
grdimage [INFORMATION]: gmt_grd_BC_set: Set boundary condition for left   edge: natural
grdimage [INFORMATION]: gmt_grd_BC_set: Set boundary condition for right  edge: natural
grdimage [INFORMATION]: gmt_grd_BC_set: Set boundary condition for bottom edge: natural
grdimage [INFORMATION]: gmt_grd_BC_set: Set boundary condition for top    edge: natural
grdimage [INFORMATION]: gmt_cpt_default: Use specific CPT: topo_ra.cpt
grdimage [INFORMATION]: Reading CPT from File topo_ra.cpt
grdimage [INFORMATION]: Evaluate image pixel colors
grdimage [INFORMATION]: Basic z(x,y) -> gray image with no illumination.
grdimage [INFORMATION]: Plotting 8-bit grayshade image
PSL: DEFLATE compressed 39066624 to 3985460 bytes (89.8% savings at compression level 5)
DEM2TOPO_RA - START ... ...
 
DEM2TOPO_RA: check if ~/.quiet file exists ... ...
 no file ~/.quiet
DEM2TOPO_RA: flag V is  -V
DEM2TOPO_RA - START ... ...
 
DEM2TOPO_RA: tension is  0.1
DEM2TOPO_RA: interpolation approach mode is  0
 
DEM2TOPO_RA: Mosaic topo data ... ...
DEM2TOPO_RA: get bounds in radar coordinates ... ...
num_rng_bins		= 11304 

num_valid_az   	= 9216 

num_patches		= 3 

SC_identity   		= 5 

PRF			= 2159.827000 

DEM2TOPO_RA: XMAX is  11304
DEM2TOPO_RA: yvalid is  9216
DEM2TOPO_RA: num_patch is  3
DEM2TOPO_RA: YMAX is  27648
DEM2TOPO_RA: SC is  5
DEM2TOPO_RA: PRF is  2159.827
DEM2TOPO_RA: region is  0/11304/0/27648
 
DEM2TOPO_RA: working over  0/11304/0/27648  ... ...
DEM2TOPO_RA: look for range sampling rate ... ...
rng_samp_rate   	= 32000000.000000 

rng_samp_rate		= 32000000.000000 

DEM2TOPO_RA: rng_samp_rate is  32000000.0
 
DEM2TOPO_RA: set the range of simulation in units of image range pixel size ... ...
DEM2TOPO_RA: range decimation rng is  2
 
gmt grd2xyz --FORMAT_FLOAT_OUT=%lf dem.grd -s | SAT_llt2rat master.PRM 0 -bod  > trans.dat
 
DEM2TOPO_RA: use an azimuth spacing of 2 for low PRF data such as S1 TOPS ... ...
DEM2TOPO_RA: if PRF>=1000, then ... ...
 
gmt gmtconvert trans.dat -o0,1,2 -bi5d -bo3d | gmt blockmedian -R0/11304/0/27648 -I2/4 -bi3d -bo3d -r -V > temp.rat
 
gmt surface temp.rat -R0/11304/0/27648 -I2/4 -bi3d -T0.1 -N1000 -Gpixel.grd -r -Q >& tmp
DEM2TOPO_RA: ?? is it possible that file tmp is not created? ... 
DEM2TOPO_RA: RR is  []
 
gmt surface temp.rat -R0/11304/0/27648 -I2/4 -bi3d -T0.1 -N1000 -Gpixel.grd -r -V
 
DEM2TOPO_RA: flip top to bottom for both ascending and descending passes ... ...
 
gmt grdmath pixel.grd FLIPUD = topo_ra.grd
 
DEM2TOPO_RA: plotting ... ...
 
gmt grd2cpt topo_ra.grd -Cgray -V -Z > topo_ra.cpt
 
gmt grdimage topo_ra.grd -JX7i -P -Ctopo_ra.cpt -Bxaf+lRange -Byaf+l"Reversed Azimuth" -BWSen -V -K > topo_ra.ps
 
gmt psscale -Rtopo_ra.grd -J -DJTC+w5i/0.2i+h -Ctopo_ra.cpt -Bxaf -By+lm -O >> topo_ra.ps
 
gmt psconvert -Tf -P -A -Z topo_ra.ps
 
DEM2TOPO_RA: Topo range/azimuth map: topo_ra.pdf
 
DEM2TOPO_RA: clean up ... ...
 
DEM2TOPO_RA - END ... ...
 range decimation is: 2
 6912 6912 6912 
 optimal: rshift = -1  ashift = -1  max_correlation = 0.229454
CLEANUP - START ... ...
 
CLEANUP: clean up intf/ folder ... ...
 
CLEANUP - END ... ...
using command line
......master LED file IMG-HH-ALPSRP207600640-H1.0__A.LED 
.........aligned LED file IMG-HH-ALPSRP227730640-H1.0__A.LED 
using command line
......master LED file IMG-HH-ALPSRP207600640-H1.0__A.LED 
.........aligned LED file IMG-HH-ALPSRP207600640-H1.0__A.LED 
reading topo topo_shift.grd
 xdim 11304, ydim 27648 
 
gmt set IO_NC4_CHUNK_SIZE classic
SC_identity   		= 5 

INTF: Retrieve SC_identity =  5  from the 1st arg ref.PRM ... ...
INTF: dealing scenarios with different SC ... ...
cp IMG-HH-ALPSRP227730640-H1.0__A.PRM IMG-HH-ALPSRP227730640-H1.0__A.PRM0
cp IMG-HH-ALPSRP207600640-H1.0__A.PRM IMG-HH-ALPSRP207600640-H1.0__A.PRM0
INTF: SAT_baseline $1 $2 output is  CompletedProcess(args=['SAT_baseline', 'IMG-HH-ALPSRP207600640-H1.0__A.PRM', 'IMG-HH-ALPSRP227730640-H1.0__A.PRM'], returncode=0, stdout=b'SC_identity = 5 \nlon_tie_point =  -115.540369\nlat_tie_point =  32.430499\nSC_vel              = 7182.974903000000 \nSC_height           = 698191.178117235191 \nSC_height_start     = 698258.929395862855 \nSC_height_end       = 698123.510395509191 \nearth_radius        = 6372234.544893999584 \nrshift              = -10 \nsub_int_r           = 0.0 \nashift              = 3\nsub_int_a           = 0.0 \nB_parallel          = 721.207673704661 \nB_perpendicular     = 909.914130114835 \nbaseline_start      = 1161.070296232371 \nbaseline_center     = 1175.901122113270 \nbaseline_end        = 1190.679993272379 \nalpha_start         = 0.699724257964 \nalpha_center        = 0.642675365097 \nalpha_end           = 0.586985449533 \nB_offset_start      = -156.236603380808 \nB_offset_center     = -155.435917175871 \nB_offset_end        = -154.660437634985 \n')
INTF: tail -n9 the above output is  ['baseline_start      = 1161.070296232371 ', 'baseline_center     = 1175.901122113270 ', 'baseline_end        = 1190.679993272379 ', 'alpha_start         = 0.699724257964 ', 'alpha_center        = 0.642675365097 ', 'alpha_end           = 0.586985449533 ', 'B_offset_start      = -156.236603380808 ', 'B_offset_center     = -155.435917175871 ', 'B_offset_end        = -154.660437634985 ', '']
INTF: insert the tail results to file  IMG-HH-ALPSRP227730640-H1.0__A.PRM
INTF: form the interferogram optionally using topo_ra and modelphase ... ...
 
phasediff IMG-HH-ALPSRP207600640-H1.0__A.PRM IMG-HH-ALPSRP227730640-H1.0__A.PRM -topo topo_shift.grd
mv IMG-HH-ALPSRP207600640-H1.0__A.PRM0 IMG-HH-ALPSRP207600640-H1.0__A.PRM
mv IMG-HH-ALPSRP227730640-H1.0__A.PRM0 IMG-HH-ALPSRP227730640-H1.0__A.PRM    # a version if this PRM0 file exists in the SLC directory, but no verson of the other is present. Both PRM files exist in SLC and raw directories. If this is a file path issue, possibly using purepath objects to resolve paths would be more error resistant.
INTF: finishing intf ... ...
sh: line 0: alias: rm: not found
sh: line 0: alias: rm -f: not found
 Can't open filter  
conv [ERROR]: Cannot find file amp1_tmp.grd
conv [ERROR]: Cannot find file amp1_tmp.grd
conv [ERROR]: File amp1_tmp.grd not found
[Session conv (0)]: Error returned from GMT API: GMT_FILE_NOT_FOUND (16)
 Can't open  amp1_tmp.grd=bf 
 Can't open filter  
conv [ERROR]: Cannot find file amp2_tmp.grd
conv [ERROR]: Cannot find file amp2_tmp.grd
conv [ERROR]: File amp2_tmp.grd not found
[Session conv (0)]: Error returned from GMT API: GMT_FILE_NOT_FOUND (16)
 Can't open  amp2_tmp.grd=bf 
 Can't open filter  
conv [ERROR]: Cannot find file real_tmp.grd
conv [ERROR]: Cannot find file real_tmp.grd
conv [ERROR]: File real_tmp.grd not found
[Session conv (0)]: Error returned from GMT API: GMT_FILE_NOT_FOUND (16)
 Can't open  real_tmp.grd=bf 
 Can't open filter  
conv [ERROR]: Cannot find file imag_tmp.grd
conv [ERROR]: Cannot find file imag_tmp.grd
conv [ERROR]: File imag_tmp.grd not found
[Session conv (0)]: Error returned from GMT API: GMT_FILE_NOT_FOUND (16)
 Can't open  imag_tmp.grd=bf 
grdmath [ERROR]: realfilt.grd is not a number, operator or file name
grdmath [ERROR]: amp.grd is not a number, operator or file name
grdinfo [ERROR]: Cannot find file display_amp.grd
grdinfo [ERROR]: Must specify one or more input files
 
alias rm 'rm -f'
 
gmt set IO_NC4_CHUNK_SIZE classic
set grdimage options
 
gmt set COLOR_MODEL = hsv
 
gmt set PROJ_LENGTH_UNIT = inch
FILTER: input arguments are  ['/usr/local/GMTSAR.py/bin/filter', 'IMG-HH-ALPSRP207600640-H1.0__A.PRM', 'IMG-HH-ALPSRP227730640-H1.0__A.PRM', '200', '2', '0']
 
FILTER - START ... ...
 
FILTER: define filter and decimation variables ... ...
FILTER: dec, az_lks are  2 4
 
PRF			= 2159.827000 

PRF			= 2159.827000 

FILTER: look for range sampling rate ... ...
rng_samp_rate   	= 32000000.000000 

rng_samp_rate		= 32000000.000000 

FILTER: rng_samp_rate is  32000000.0
 
FILTER: set the range spacing in units of image range pixel size ... ...
FILTER: special for TOPS mode ... ...
 
FILTER: filter1 is  /usr/local/GMTSAR/share/gmtsar/filters/gauss15x5
FILTER: determine whether to run phase gradient ... ...
FILTER: set az_lks and dec_rng to 1 for odd decimation ... ...
FILTER: make the custom filter2 and set the decimation ... ...
 
make_gaussian_filter IMG-HH-ALPSRP207600640-H1.0__A.PRM 2 4 200 > ijdec
ijdev, idec, jdec, dec ['1', '1'] 2 2 2
gauss_200 2 2 4 2
 
FILTER: filter the two amplitude images ... ...
 
FILTER: making amplitudes ... ...
 
conv 4 2 /usr/local/GMTSAR/share/gmtsar/filters/gauss15x5 IMG-HH-ALPSRP207600640-H1.0__A.PRM amp1_tmp.grd=bf
 
conv 2 2 gauss_200 amp1_tmp.grd=bf amp1.grd
 
conv 4 2 /usr/local/GMTSAR/share/gmtsar/filters/gauss15x5 IMG-HH-ALPSRP227730640-H1.0__A.PRM amp2_tmp.grd=bf
 
conv 2 2 gauss_200 amp2_tmp.grd=bf amp2.grd
FILTER: filter the real and imaginary parts of the interferogram ... ...
FILTER: filtering interferogram ... ...
 
conv 4 2 /usr/local/GMTSAR/share/gmtsar/filters/gauss15x5 real.grd=bf real_tmp.grd=bf
 
conv 2 2 gauss_200 real_tmp.grd=bf realfilt.grd
 
conv 4 2 /usr/local/GMTSAR/share/gmtsar/filters/gauss15x5 imag.grd=bf imag_tmp.grd=bf
 
conv 2 2 gauss_200 imag_tmp.grd=bf imagfilt.grd
 
FILTER: also compute gradients and filter them the same way ... ...
 
FILTER: form amplitude image ... ...
FILTER: making amplitude ... ...
 
gmt grdmath realfilt.grd imagfilt.grd HYPOT = amp.grd
 
gmt grdmath amp.grd 0.5 POW FLIPUD = display_amp.grd
Traceback (most recent call last):
  File "/usr/local/GMTSAR.py/bin/filter", line 275, in <module>
    _main_func(__doc__)
  File "/usr/local/GMTSAR.py/bin/filter", line 272, in _main_func
    filter()
  File "/usr/local/GMTSAR.py/bin/filter", line 197, in filter
    output = subprocess.check_output(['gmt', 'grdinfo', '-L2', 'display_amp.grd'])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/m1hawks/miniconda3/lib/python3.11/subprocess.py", line 466, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/m1hawks/miniconda3/lib/python3.11/subprocess.py", line 571, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['gmt', 'grdinfo', '-L2', 'display_amp.grd']' returned non-zero exit status 72.
grdmath [INFORMATION]: Perform reverse Polish notation calculations on grids
grdmath [ERROR]: corr.grd is not a number, operator or file name
grdmath [ERROR]: phase.grd is not a number, operator or file name
grdimage [ERROR]: Cannot find file phase_mask.grd
psscale [WARNING]: No country code matching phase_mask.grd (skipped)
psscale [ERROR]: GMT_Read_Data: File not found: phase.cpt
psconvert [ERROR]: The file phase_mask.ps has no BoundingBox in the first 20 lines or last 256 bytes. Use -A option.
grd2xyz [ERROR]: Cannot find file corr.grd
grd2xyz [ERROR]: Cannot find file corr.grd
grd2xyz [ERROR]: File corr.grd not found
[Session gmt (0)]: Error returned from GMT API: GMT_FILE_NOT_FOUND (16)
gmtinfo [ERROR]: No input data found!
surface [ERROR]: Must specify -R option
surface [INFORMATION]: Provides 5, expects 3-column binary data
surface [ERROR]: Must specify -R option
surface [INFORMATION]: Provides 5, expects 3-column binary data
grdtrack [ERROR]: Cannot find file raln.grd
grdtrack [ERROR]: Cannot find file ralt.grd
grdtrack [ERROR]: Must specify -G at least once
gmtconvert [WARNING]: File <stdin> is empty!
gmtconvert [WARNING]: No data records provided
gmtinfo [ERROR]: No input data found!
range: Subscript out of range.
gmtmath [ERROR]: Operation "DIV" requires 2 operands
gmtmath [ERROR]: Operation "MUL" requires 2 operands
gmtinfo [ERROR]: No input data found!
blockmedian [ERROR]: Unable to decode  as a floating point number
blockmedian [ERROR]: Option -I parsing failure.  Correct syntax:

  -I<xinc>[+e|n][/<yinc>[+e|n]]
     Specify increment(s) and optionally append units or modifiers. For geographic regions in degrees you can optionally append units from this list: (d)egree [Default], (m)inute, (s)econd, m(e)ter, (f)oot, (k)ilometer, (M)ile, (n)autical mile, s(u)rvey foot.
       +e Adjust the region to fit increments [Adjust increment to fit domain].
       +n Increment specifies the number of nodes instead. Then, the actual increments are calculated from the given domain and node-registration settings (see Appendix B for details).
     Note: If -R<grdfile> was used then -I (and -R and maybe -r) have been set; use -I to override those increments.
blockmedian [ERROR]: Must specify -R option
blockmedian [ERROR]: Option -I: Must specify positive increment(s)
blockmedian [INFORMATION]: Provides 3, expects 3-column binary data
xyz2grd [ERROR]: Unable to decode  as a floating point number
xyz2grd [ERROR]: Option -I parsing failure.  Correct syntax:

  -I<xinc>[+e|n][/<yinc>[+e|n]]
     Specify increment(s) and optionally append units or modifiers. For geographic regions in degrees you can optionally append units from this list: (d)egree [Default], (m)inute, (s)econd, m(e)ter, (f)oot, (k)ilometer, (M)ile, (n)autical mile, s(u)rvey foot.
       +e Adjust the region to fit increments [Adjust increment to fit domain].
       +n Increment specifies the number of nodes instead. Then, the actual increments are calculated from the given domain and node-registration settings (see Appendix B for details).
     Note: If -R<grdfile> was used then -I (and -R and maybe -r) have been set; use -I to override those increments.
xyz2grd [ERROR]: Must specify -R option
xyz2grd [ERROR]: Option -I: Must specify positive increment(s)
rm: raln: No such file or directory
rm: ralt: No such file or directory
PROJ_RA2ll - START ... ...
PROJ_RA2ll: input arguments are  ['/usr/local/GMTSAR.py/bin/proj_ra2ll', 'trans.dat', 'corr.grd', 'corr_ll.grd']
 
PROJ_RA2ll: extract the phase in the r a positions ... ...
 
gmt grd2xyz corr.grd -s -bo3f > rap
 
PROJ_RA2ll: make grids of longitude and latitude versus range and azimuth unless they already exist ... ...
 no file raln.grd
PROJ_RA2ll: region is  
 
gmt surface trans.dat -i0,1,3 -bi5d  -I16/32 -T.50 -Graln.grd -V
 
gmt surface trans.dat -i0,1,4 -bi5d  -I16/32 -T.50 -Gralt.grd -V
 
PROJ_RA2ll: add lon and lat columns and then just keep lon, lat, phase ... ...
 
gmt grdtrack rap -nl -bi3f -bo5f -Graln.grd -Gralt.grd | gmt gmtconvert -bi5f -bo3f -o3,4,2 > llp
PROJ_RA2ll: set the output grid spaccing to be 1/4 the filter wavelength ... ...
PROJ_RA2ll: Sampling in geocoordinates with 50.0 meter pixels ...
PROJ_RA2ll: incs is  ['s/1.5s', 's/15s']
PROJ_RA2ll: R is  
 
gmt blockmedian llp  -bi3f -bo3f -Is/1.5s -r -V > llpb
 
gmt xyz2grd llpb  -Is/1.5s  -r -fg -Gcorr_ll.grd -bi3f
 
rm rap* llp llpb raln ralt
PROJ_RA2ll - END ... ...
grdedit [ERROR]: Cannot find file corr_ll.grd
grd2xyz [ERROR]: Cannot find file phasefilt.grd
grd2xyz [ERROR]: Cannot find file phasefilt.grd
grd2xyz [ERROR]: File phasefilt.grd not found
[Session gmt (0)]: Error returned from GMT API: GMT_FILE_NOT_FOUND (16)
gmtinfo [ERROR]: No input data found!
surface [ERROR]: Must specify -R option
surface [INFORMATION]: Provides 5, expects 3-column binary data
surface [ERROR]: Must specify -R option
surface [INFORMATION]: Provides 5, expects 3-column binary data
grdtrack [ERROR]: Cannot find file raln.grd
grdtrack [ERROR]: Cannot find file ralt.grd
grdtrack [ERROR]: Must specify -G at least once
gmtconvert [WARNING]: File <stdin> is empty!
gmtconvert [WARNING]: No data records provided
gmtinfo [ERROR]: No input data found!
range: Subscript out of range.
gmtmath [ERROR]: Operation "DIV" requires 2 operands
gmtmath [ERROR]: Operation "MUL" requires 2 operands
gmtinfo [ERROR]: No input data found!
blockmedian [ERROR]: Unable to decode  as a floating point number
blockmedian [ERROR]: Option -I parsing failure.  Correct syntax:

  -I<xinc>[+e|n][/<yinc>[+e|n]]
     Specify increment(s) and optionally append units or modifiers. For geographic regions in degrees you can optionally append units from this list: (d)egree [Default], (m)inute, (s)econd, m(e)ter, (f)oot, (k)ilometer, (M)ile, (n)autical mile, s(u)rvey foot.
       +e Adjust the region to fit increments [Adjust increment to fit domain].
       +n Increment specifies the number of nodes instead. Then, the actual increments are calculated from the given domain and node-registration settings (see Appendix B for details).
     Note: If -R<grdfile> was used then -I (and -R and maybe -r) have been set; use -I to override those increments.
blockmedian [ERROR]: Must specify -R option
blockmedian [ERROR]: Option -I: Must specify positive increment(s)
blockmedian [INFORMATION]: Provides 3, expects 3-column binary data
xyz2grd [ERROR]: Unable to decode  as a floating point number
xyz2grd [ERROR]: Option -I parsing failure.  Correct syntax:

  -I<xinc>[+e|n][/<yinc>[+e|n]]
     Specify increment(s) and optionally append units or modifiers. For geographic regions in degrees you can optionally append units from this list: (d)egree [Default], (m)inute, (s)econd, m(e)ter, (f)oot, (k)ilometer, (M)ile, (n)autical mile, s(u)rvey foot.
       +e Adjust the region to fit increments [Adjust increment to fit domain].
       +n Increment specifies the number of nodes instead. Then, the actual increments are calculated from the given domain and node-registration settings (see Appendix B for details).
     Note: If -R<grdfile> was used then -I (and -R and maybe -r) have been set; use -I to override those increments.
xyz2grd [ERROR]: Must specify -R option
xyz2grd [ERROR]: Option -I: Must specify positive increment(s)
rm: raln: No such file or directory
rm: ralt: No such file or directory
PROJ_RA2ll - START ... ...
PROJ_RA2ll: input arguments are  ['/usr/local/GMTSAR.py/bin/proj_ra2ll', 'trans.dat', 'phasefilt.grd', 'phasefilt_ll.grd']
 
PROJ_RA2ll: extract the phase in the r a positions ... ...
 
gmt grd2xyz phasefilt.grd -s -bo3f > rap
 
PROJ_RA2ll: make grids of longitude and latitude versus range and azimuth unless they already exist ... ...
 no file raln.grd
PROJ_RA2ll: region is  
 
gmt surface trans.dat -i0,1,3 -bi5d  -I16/32 -T.50 -Graln.grd -V
 
gmt surface trans.dat -i0,1,4 -bi5d  -I16/32 -T.50 -Gralt.grd -V
 
PROJ_RA2ll: add lon and lat columns and then just keep lon, lat, phase ... ...
 
gmt grdtrack rap -nl -bi3f -bo5f -Graln.grd -Gralt.grd | gmt gmtconvert -bi5f -bo3f -o3,4,2 > llp
PROJ_RA2ll: set the output grid spaccing to be 1/4 the filter wavelength ... ...
PROJ_RA2ll: Sampling in geocoordinates with 50.0 meter pixels ...
PROJ_RA2ll: incs is  ['s/1.5s', 's/15s']
PROJ_RA2ll: R is  
 
gmt blockmedian llp  -bi3f -bo3f -Is/1.5s -r -V > llpb
 
gmt xyz2grd llpb  -Is/1.5s  -r -fg -Gphasefilt_ll.grd -bi3f
 
rm rap* llp llpb raln ralt
PROJ_RA2ll - END ... ...
grdedit [ERROR]: Cannot find file phasefilt_ll.grd
grd2xyz [ERROR]: Cannot find file phase_mask.grd
grd2xyz [ERROR]: Cannot find file phase_mask.grd
grd2xyz [ERROR]: File phase_mask.grd not found
[Session gmt (0)]: Error returned from GMT API: GMT_FILE_NOT_FOUND (16)
gmtinfo [ERROR]: No input data found!
surface [ERROR]: Must specify -R option
surface [INFORMATION]: Provides 5, expects 3-column binary data
surface [ERROR]: Must specify -R option
surface [INFORMATION]: Provides 5, expects 3-column binary data
grdtrack [ERROR]: Cannot find file raln.grd
grdtrack [ERROR]: Cannot find file ralt.grd
grdtrack [ERROR]: Must specify -G at least once
gmtconvert [WARNING]: File <stdin> is empty!
gmtconvert [WARNING]: No data records provided
gmtinfo [ERROR]: No input data found!
range: Subscript out of range.
gmtmath [ERROR]: Operation "DIV" requires 2 operands
gmtmath [ERROR]: Operation "MUL" requires 2 operands
gmtinfo [ERROR]: No input data found!
blockmedian [ERROR]: Unable to decode  as a floating point number
blockmedian [ERROR]: Option -I parsing failure.  Correct syntax:

  -I<xinc>[+e|n][/<yinc>[+e|n]]
     Specify increment(s) and optionally append units or modifiers. For geographic regions in degrees you can optionally append units from this list: (d)egree [Default], (m)inute, (s)econd, m(e)ter, (f)oot, (k)ilometer, (M)ile, (n)autical mile, s(u)rvey foot.
       +e Adjust the region to fit increments [Adjust increment to fit domain].
       +n Increment specifies the number of nodes instead. Then, the actual increments are calculated from the given domain and node-registration settings (see Appendix B for details).
     Note: If -R<grdfile> was used then -I (and -R and maybe -r) have been set; use -I to override those increments.
blockmedian [ERROR]: Must specify -R option
blockmedian [ERROR]: Option -I: Must specify positive increment(s)
blockmedian [INFORMATION]: Provides 3, expects 3-column binary data
xyz2grd [ERROR]: Unable to decode  as a floating point number
xyz2grd [ERROR]: Option -I parsing failure.  Correct syntax:

  -I<xinc>[+e|n][/<yinc>[+e|n]]
     Specify increment(s) and optionally append units or modifiers. For geographic regions in degrees you can optionally append units from this list: (d)egree [Default], (m)inute, (s)econd, m(e)ter, (f)oot, (k)ilometer, (M)ile, (n)autical mile, s(u)rvey foot.
       +e Adjust the region to fit increments [Adjust increment to fit domain].
       +n Increment specifies the number of nodes instead. Then, the actual increments are calculated from the given domain and node-registration settings (see Appendix B for details).
     Note: If -R<grdfile> was used then -I (and -R and maybe -r) have been set; use -I to override those increments.
xyz2grd [ERROR]: Must specify -R option
xyz2grd [ERROR]: Option -I: Must specify positive increment(s)
rm: raln: No such file or directory
rm: ralt: No such file or directory
PROJ_RA2ll - START ... ...
PROJ_RA2ll: input arguments are  ['/usr/local/GMTSAR.py/bin/proj_ra2ll', 'trans.dat', 'phase_mask.grd', 'phase_mask_ll.grd']
 
PROJ_RA2ll: extract the phase in the r a positions ... ...
 
gmt grd2xyz phase_mask.grd -s -bo3f > rap
 
PROJ_RA2ll: make grids of longitude and latitude versus range and azimuth unless they already exist ... ...
 no file raln.grd
PROJ_RA2ll: region is  
 
gmt surface trans.dat -i0,1,3 -bi5d  -I16/32 -T.50 -Graln.grd -V
 
gmt surface trans.dat -i0,1,4 -bi5d  -I16/32 -T.50 -Gralt.grd -V
 
PROJ_RA2ll: add lon and lat columns and then just keep lon, lat, phase ... ...
 
gmt grdtrack rap -nl -bi3f -bo5f -Graln.grd -Gralt.grd | gmt gmtconvert -bi5f -bo3f -o3,4,2 > llp
PROJ_RA2ll: set the output grid spaccing to be 1/4 the filter wavelength ... ...
PROJ_RA2ll: Sampling in geocoordinates with 50.0 meter pixels ...
PROJ_RA2ll: incs is  ['s/1.5s', 's/15s']
PROJ_RA2ll: R is  
 
gmt blockmedian llp  -bi3f -bo3f -Is/1.5s -r -V > llpb
 
gmt xyz2grd llpb  -Is/1.5s  -r -fg -Gphase_mask_ll.grd -bi3f
 
rm rap* llp llpb raln ralt
PROJ_RA2ll - END ... ...
grdedit [ERROR]: Cannot find file phase_mask_ll.grd
grd2xyz [ERROR]: Cannot find file display_amp.grd
grd2xyz [ERROR]: Cannot find file display_amp.grd
grd2xyz [ERROR]: File display_amp.grd not found
[Session gmt (0)]: Error returned from GMT API: GMT_FILE_NOT_FOUND (16)
gmtinfo [ERROR]: No input data found!
surface [ERROR]: Must specify -R option
surface [INFORMATION]: Provides 5, expects 3-column binary data
surface [ERROR]: Must specify -R option
surface [INFORMATION]: Provides 5, expects 3-column binary data
grdtrack [ERROR]: Cannot find file raln.grd
grdtrack [ERROR]: Cannot find file ralt.grd
grdtrack [ERROR]: Must specify -G at least once
gmtconvert [WARNING]: File <stdin> is empty!
gmtconvert [WARNING]: No data records provided
gmtinfo [ERROR]: No input data found!
range: Subscript out of range.
gmtmath [ERROR]: Operation "DIV" requires 2 operands
gmtmath [ERROR]: Operation "MUL" requires 2 operands
gmtinfo [ERROR]: No input data found!
blockmedian [ERROR]: Unable to decode  as a floating point number
blockmedian [ERROR]: Option -I parsing failure.  Correct syntax:

  -I<xinc>[+e|n][/<yinc>[+e|n]]
     Specify increment(s) and optionally append units or modifiers. For geographic regions in degrees you can optionally append units from this list: (d)egree [Default], (m)inute, (s)econd, m(e)ter, (f)oot, (k)ilometer, (M)ile, (n)autical mile, s(u)rvey foot.
       +e Adjust the region to fit increments [Adjust increment to fit domain].
       +n Increment specifies the number of nodes instead. Then, the actual increments are calculated from the given domain and node-registration settings (see Appendix B for details).
     Note: If -R<grdfile> was used then -I (and -R and maybe -r) have been set; use -I to override those increments.
blockmedian [ERROR]: Must specify -R option
blockmedian [ERROR]: Option -I: Must specify positive increment(s)
blockmedian [INFORMATION]: Provides 3, expects 3-column binary data
xyz2grd [ERROR]: Unable to decode  as a floating point number
xyz2grd [ERROR]: Option -I parsing failure.  Correct syntax:

  -I<xinc>[+e|n][/<yinc>[+e|n]]
     Specify increment(s) and optionally append units or modifiers. For geographic regions in degrees you can optionally append units from this list: (d)egree [Default], (m)inute, (s)econd, m(e)ter, (f)oot, (k)ilometer, (M)ile, (n)autical mile, s(u)rvey foot.
       +e Adjust the region to fit increments [Adjust increment to fit domain].
       +n Increment specifies the number of nodes instead. Then, the actual increments are calculated from the given domain and node-registration settings (see Appendix B for details).
     Note: If -R<grdfile> was used then -I (and -R and maybe -r) have been set; use -I to override those increments.
xyz2grd [ERROR]: Must specify -R option
xyz2grd [ERROR]: Option -I: Must specify positive increment(s)
rm: raln: No such file or directory
rm: ralt: No such file or directory
PROJ_RA2ll - START ... ...
PROJ_RA2ll: input arguments are  ['/usr/local/GMTSAR.py/bin/proj_ra2ll', 'trans.dat', 'display_amp.grd', 'display_amp_ll.grd']
 
PROJ_RA2ll: extract the phase in the r a positions ... ...
 
gmt grd2xyz display_amp.grd -s -bo3f > rap
 
PROJ_RA2ll: make grids of longitude and latitude versus range and azimuth unless they already exist ... ...
 no file raln.grd
PROJ_RA2ll: region is  
 
gmt surface trans.dat -i0,1,3 -bi5d  -I16/32 -T.50 -Graln.grd -V
 
gmt surface trans.dat -i0,1,4 -bi5d  -I16/32 -T.50 -Gralt.grd -V
 
PROJ_RA2ll: add lon and lat columns and then just keep lon, lat, phase ... ...
 
gmt grdtrack rap -nl -bi3f -bo5f -Graln.grd -Gralt.grd | gmt gmtconvert -bi5f -bo3f -o3,4,2 > llp
PROJ_RA2ll: set the output grid spaccing to be 1/4 the filter wavelength ... ...
PROJ_RA2ll: Sampling in geocoordinates with 50.0 meter pixels ...
PROJ_RA2ll: incs is  ['s/1.5s', 's/15s']
PROJ_RA2ll: R is  
 
gmt blockmedian llp  -bi3f -bo3f -Is/1.5s -r -V > llpb
 
gmt xyz2grd llpb  -Is/1.5s  -r -fg -Gdisplay_amp_ll.grd -bi3f
 
rm rap* llp llpb raln ralt
PROJ_RA2ll - END ... ...
grdedit [ERROR]: Cannot find file display_amp_ll.grd
grdinfo [ERROR]: Cannot find file display_amp_ll.grd
grdinfo [ERROR]: Must specify one or more input files
GRD2KML - START ... ...
GRD2KML: input arguments are  ['/usr/local/GMTSAR.py/bin/grd2kml', 'display_amp_ll', 'display_amp.cpt']
Traceback (most recent call last):
  File "/usr/local/GMTSAR.py/bin/grd2kml", line 59, in <module>
    _main_func(__doc__)
  File "/usr/local/GMTSAR.py/bin/grd2kml", line 56, in _main_func
    grd2kml()
  File "/usr/local/GMTSAR.py/bin/grd2kml", line 34, in grd2kml
    DX = subprocess.run(["gmt","grdinfo",sys.argv[1]+".grd","-C"], stdout=subprocess.PIPE).stdout.decode('utf-8').strip().split()[7]
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
IndexError: list index out of range
grdinfo [ERROR]: Cannot find file corr_ll.grd
grdinfo [ERROR]: Must specify one or more input files
GRD2KML - START ... ...
GRD2KML: input arguments are  ['/usr/local/GMTSAR.py/bin/grd2kml', 'corr_ll', 'corr.cpt']
Traceback (most recent call last):
  File "/usr/local/GMTSAR.py/bin/grd2kml", line 59, in <module>
    _main_func(__doc__)
  File "/usr/local/GMTSAR.py/bin/grd2kml", line 56, in _main_func
    grd2kml()
  File "/usr/local/GMTSAR.py/bin/grd2kml", line 34, in grd2kml
    DX = subprocess.run(["gmt","grdinfo",sys.argv[1]+".grd","-C"], stdout=subprocess.PIPE).stdout.decode('utf-8').strip().split()[7]
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
IndexError: list index out of range
grdinfo [ERROR]: Cannot find file phase_mask_ll.grd
grdinfo [ERROR]: Must specify one or more input files
GRD2KML - START ... ...
GRD2KML: input arguments are  ['/usr/local/GMTSAR.py/bin/grd2kml', 'phase_mask_ll', 'phase.cpt']
Traceback (most recent call last):
  File "/usr/local/GMTSAR.py/bin/grd2kml", line 59, in <module>
    _main_func(__doc__)
  File "/usr/local/GMTSAR.py/bin/grd2kml", line 56, in _main_func
    grd2kml()
  File "/usr/local/GMTSAR.py/bin/grd2kml", line 34, in grd2kml
    DX = subprocess.run(["gmt","grdinfo",sys.argv[1]+".grd","-C"], stdout=subprocess.PIPE).stdout.decode('utf-8').strip().split()[7]
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
IndexError: list index out of range
grdinfo [ERROR]: Cannot find file phasefilt_mask_ll.grd
grdinfo [ERROR]: Must specify one or more input files
GRD2KML - START ... ...
GRD2KML: input arguments are  ['/usr/local/GMTSAR.py/bin/grd2kml', 'phasefilt_mask_ll', 'phase.cpt']
Traceback (most recent call last):
  File "/usr/local/GMTSAR.py/bin/grd2kml", line 59, in <module>
    _main_func(__doc__)
  File "/usr/local/GMTSAR.py/bin/grd2kml", line 56, in _main_func
    grd2kml()
  File "/usr/local/GMTSAR.py/bin/grd2kml", line 34, in grd2kml
    DX = subprocess.run(["gmt","grdinfo",sys.argv[1]+".grd","-C"], stdout=subprocess.PIPE).stdout.decode('utf-8').strip().split()[7]
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
IndexError: list index out of range
GEOCODE - START ... ...
GEOCODE: input arguments are  ['/usr/local/GMTSAR.py/bin/geocode', '0.1']
 no file ~/.quiet
GEOCODE: first mask the phase and phase gradient using the correlation ... ...
 
 
gmt grdmath corr.grd 0.1 GE 0 NAN mask.grd MUL = mask2.grd -V
 
gmt grdmath phase.grd mask2.grd MUL = phase_mask.grd
 no file xphase.grd
 no file unwrap.grd
 no file phasefilt.grd
 
GEOCODE: look at the masked phase ... ...
 
gmt grdimage phase_mask.grd -JX6.5i -Cphase.cpt -Bxaf+lRange -Byaf+lAzimuth -BWSen -X1.3i -Y3i -P -K > phase_mask.ps
 
gmt psscale -Rphase_mask.grd -J -DJTC+w5i/0.2i+h -Cphase.cpt -Bxa1.57+l"Phase" -By+lrad -O >> phase_mask.ps
 
gmt psconvert -Tf -P -A -Z phase_mask.ps
 
GEOCODE: maksed phase map: phase_mask,pdf ... ...
 no file xphase_mask.grd
 no file unwrap_mask.grd
 no file phasefilt_mask.grd
 
GEOCODE: line-of-sight displacement ... ...
 no file unwrap_mask.grd
 
GEOCODE: now reproject the phase to lon/lat space ... ...
GEOCODE: geocode ... ...
GEOCODE: project correlation, phase, unwrapped and amplitude back to lon lat coordinates ... ...
 
proj_ra2ll trans.dat corr.grd corr_ll.grd
 
gmt grdedit -D//"dimensionless"/1///"$PWD:t geocoded correlation"/"$remarked"  corr_ll.grd
 
proj_ra2ll trans.dat phasefilt.grd   phasefilt_ll.grd
 
gmt grdedit -D//"radians"/1///"$PWD:t wrapped phase after filtering"/"$remarked"  phasefilt_ll.grd
 
proj_ra2ll trans.dat phase_mask.grd  phase_mask_ll.grd
 
gmt grdedit -D//"radians"/1///"$PWD:t wrapped phase after masking"/"$remarked"  phase_mask_ll.grd
 
proj_ra2ll trans.dat display_amp.grd display_amp_ll.grd
 
gmt grdedit -D//"dimensionless"/1///"PWD:t amplitude"/"$remarked"  display_amp_ll.grd
 no file xphase_mask.grd
 no file unwrap_mask.grd
 no file unwrap.grd
 no file phasefilt_mask.grd
 
GEOCODE: now image for google earth ... ...
GEOCODE: make the MKL files for Google Earth ... ...
 
grd2kml display_amp_ll display_amp.cpt
 
grd2kml corr_ll corr.cpt
 
grd2kml phase_mask_ll phase.cpt
 
grd2kml phasefilt_mask_ll phase.cpt
 no file xphase_mask_ll.grd
 no file unwrap_mask_ll.grd
 no file phasefilt_mask_ll.grd
 no file unwrap_mask_ll.grd
GEOCODE - END ... ...
Running main
Running p2p_processing ... ...
P2P 0: the satellite is  ALOS
P2P 0: check if a customized configuration file config.py exists ... ...
P2P 0: no config.py is provided ... ...
P2P 0: and a default one will be generated by p2p_config ... ...
 
pop_config ALOS
P2P 0: read in parameters from the config.py ... ...
P2P 0: proc_stage   = 1
P2P 0: skip_stage   = -999
P2P 0: skip_master  = 0
P2P 0: num_patches  = -999
P2P 0: earth_radius = -999
P2P 0: near_range   = -999
P2P 0: fd1          = -999
P2P 0: region_cut   = -999
P2P 0: topo_phase   = 1
P2P 0: topo_interp_mode = 0
P2P 0: shift_topo   = 1
P2P 0: switch_master= 0
P2P 0: filter_wavelength = 200
P2P 0: dec_factor   = 2
P2P 0: compute_phase_gradient = 0
P2P 0: correct_iono = 0
P2P 0: iono_filt_rng= 1.0
P2P 0: iono_filt_azi= 1.0
P2P 0: iono_dsamp   = 1
P2P 0: iono_skip_est= 1
P2P 0: threshold_snaphu= 0
P2P 0: near_interp  = 0
P2P 0: mask_water   = 1
P2P 0: defomax      = 0
P2P 0: threshold_geocode 0.1
P2P 0: loading skip_stage flags skip_i (i=1-6) from config.py ... ...
P2P 0: for example, skip_1 = 1(0) for skipping(processing) this stage ... ...
P2P 0: skip_1 =  0
P2P 0: skip_2 =  0
P2P 0: skip_3 =  0
P2P 0: skip_4 =  0
P2P 0: skip_5 =  0
P2P 0: skip_6 =  0
P2P 0: switch_land = -999
P2P 0: non-conventional configuration parameters are loaded ... ...
P2P 0: spec_div    = 0
P2P 0: spec_mode   = -999
P2P 0: switch_land = -999
P2P 0: range_dec   = -999
P2P 0: azimuth_dec = -999
P2P 0: SLC_factor  = -999
P2P 0: Finished loading configuration parameters.
P2P 0: combining preprocess paramters to cmdAppendix.
P2P 0: commadline appendix is    -skip_master 0
Running P2P1Preprocess
P2P 1: PREPROCESS - START
P2P 1: Processing images IMG-HH-ALPSRP207600640-H1.0__A IMG-HH-ALPSRP227730640-H1.0__A
 
rm -f raw/IMG-HH-ALPSRP207600640-H1.0__A.PRM*
 
rm -f raw/IMG-HH-ALPSRP207600640-H1.0__A.SLC
 
rm -f raw/IMG-HH-ALPSRP207600640-H1.0__A.LED
 
rm -f raw/IMG-HH-ALPSRP227730640-H1.0__A.PRM*
 
rm -f raw/IMG-HH-ALPSRP227730640-H1.0__A.SLC
 
rm -f raw/IMG-HH-ALPSRP227730640-H1.0__A.LED
P2P 1: entering directory raw/
 
pre_proc ALOS IMG-HH-ALPSRP207600640-H1.0__A IMG-HH-ALPSRP227730640-H1.0__A   -skip_master 0
P2P 1: exiting directory raw/
P2P 1: PREPROCESS - END
P2P 2: start from focus and align SLC images
 
mkdir -p SLC
master, aligned should be modified for SAT==S1_TOPS IMG-HH-ALPSRP207600640-H1.0__A IMG-HH-ALPSRP227730640-H1.0__A
P2P 2: if stage<=2 and skip_2 == 0
 
 if skip_master == 0 or 2
 
 
rm -f SLC/IMG-HH-ALPSRP207600640-H1.0__A.PRM*
 
rm -f SLC/IMG-HH-ALPSRP207600640-H1.0__A.SLC
 
rm -f SLC/IMG-HH-ALPSRP207600640-H1.0__A.LED
 
 if skip_master == 0 or 1
 
 
rm -f SLC/IMG-HH-ALPSRP227730640-H1.0__A.PRM*
 
rm -f SLC/IMG-HH-ALPSRP227730640-H1.0__A.SLC
 
rm -f SLC/IMG-HH-ALPSRP227730640-H1.0__A.LED
P2P 2: focus and align SLC images
P2P 2: ALIGN.CSH - START
P2P 2: entering directory SLC/
P2P 2: if SAT is not S1_TOPS
 
cp ../raw/IMG-HH-ALPSRP207600640-H1.0__A.PRM .
 
ln -sf ../raw/IMG-HH-ALPSRP207600640-H1.0__A.raw .
 
ln -sf ../raw/IMG-HH-ALPSRP207600640-H1.0__A.LED .
 
cp ../raw/IMG-HH-ALPSRP227730640-H1.0__A.PRM .
 
ln -sf ../raw/IMG-HH-ALPSRP227730640-H1.0__A.raw .
 
ln -sf ../raw/IMG-HH-ALPSRP227730640-H1.0__A.LED .
P2P 2: calling sarp for SAT==ERS/ENVI/ALOS/CSK_RAW
 
sarp IMG-HH-ALPSRP207600640-H1.0__A.PRM
 
sarp IMG-HH-ALPSRP227730640-H1.0__A.PRM
cp IMG-HH-ALPSRP227730640-H1.0__A.PRM IMG-HH-ALPSRP227730640-H1.0__A.PRM0
 
SAT_baseline IMG-HH-ALPSRP207600640-H1.0__A.PRM IMG-HH-ALPSRP227730640-H1.0__A.PRM0 >> IMG-HH-ALPSRP227730640-H1.0__A.PRM
 
xcorr IMG-HH-ALPSRP207600640-H1.0__A.PRM IMG-HH-ALPSRP227730640-H1.0__A.PRM -xsearch 128 -ysearch 128 -nx 20 -ny 50
 
fitoffset 3 3 freq_xcorr.dat 18 >> IMG-HH-ALPSRP227730640-H1.0__A.PRM
 
resamp IMG-HH-ALPSRP207600640-H1.0__A.PRM IMG-HH-ALPSRP227730640-H1.0__A.PRM IMG-HH-ALPSRP227730640-H1.0__A.PRMresamp IMG-HH-ALPSRP227730640-H1.0__A.SLCresamp 4
mv IMG-HH-ALPSRP227730640-H1.0__A.SLCresamp IMG-HH-ALPSRP227730640-H1.0__A.SLC
cp IMG-HH-ALPSRP227730640-H1.0__A.PRMresamp IMG-HH-ALPSRP227730640-H1.0__A.PRM
P2P 2: ALIGN.CSH - END
P2P 3: start from make topo_ra
 
cleanup topo
P2P 3: make topo_ra if there is dem.grd
 
P2P 3: topo_phase=1
P2P 3: DEM2TOPO_RA.CSH - START
P2P 3: USER SHOULD PROVIDE DEM FILE
P2P 3: entering directory topo/
cp ../SLC/IMG-HH-ALPSRP207600640-H1.0__A.PRM master.PRM
 
ln -sf ../raw/IMG-HH-ALPSRP207600640-H1.0__A.LED .
 
dem2topo_ra master.PRM dem.grd
P2P 3: exiting directory topo/
P2P 3: DEM2TOPO_RA.CSH - END
P2P 3: shift topo_ra
P2P 3: OFFSET_TOPO - START
P2P 3: entering directory SLC/
rng_samp_rate   	= 32000000.000000 

rng_samp_rate		= 32000000.000000 

 
gmt grdinfo ../topo/topo_ra.grd > tmp.txt
../topo/topo_ra.grd: x_min: 0 x_max: 11304 x_inc: 2 name: x n_columns: 5652

 
slc2amp.csh IMG-HH-ALPSRP207600640-H1.0__A.PRM 2 amp-IMG-HH-ALPSRP207600640-H1.0__A.grd
P2P 3: exiting SLC/
P2P 3: entering topo/
ln -sf ../SLC/amp-IMG-HH-ALPSRP207600640-H1.0__A.grd .
 
offset_topo amp-IMG-HH-ALPSRP207600640-H1.0__A.grd topo_ra.grd 0 0 7 topo_shift.grd
P2P 3: exiting topo/
P2P 3: OFFSET_TOPO - END
P2P 4: select the master based on switch_master
P2P 4: start from make and filter interferograms
 
mkdir -p intf
 
cleanup intf
P2P 4: INTF.CSH, FILTER.CSH - START
P2P 4: entering intf/
SC_clock_start		= 2009351.2598531125 

SC_clock_start		= 2010124.2593047328 

 
mkdir -p 2009351_2010124
 
ln -sf ../../SLC/IMG-HH-ALPSRP207600640-H1.0__A.LED .
 
ln -sf ../../SLC/IMG-HH-ALPSRP227730640-H1.0__A.LED .
 
ln -sf ../../SLC/IMG-HH-ALPSRP207600640-H1.0__A.SLC .
 
ln -sf ../../SLC/IMG-HH-ALPSRP227730640-H1.0__A.SLC .
 
cp ../../SLC/IMG-HH-ALPSRP207600640-H1.0__A.PRM .
 
cp ../../SLC/IMG-HH-ALPSRP227730640-H1.0__A.PRM .
 
ln -s ../../topo/topo_shift.grd .
 
intf IMG-HH-ALPSRP207600640-H1.0__A.PRM IMG-HH-ALPSRP227730640-H1.0__A.PRM -topo topo_shift.grd
 
filter IMG-HH-ALPSRP207600640-H1.0__A.PRM IMG-HH-ALPSRP227730640-H1.0__A.PRM 200 2 0
INTF.CSH, FILTER.CSH - END
P2P 5: SKIP UNWRAP PAHSE
P2P 6: threshold_geocode != 0
P2P 6: entering intf/
SC_clock_start		= 2009351.2598531125 

SC_clock_start		= 2010124.2593047328 

P2P 6: GEOCODE.CSH - START
 no file rain.grd
 no file ralt.grd
 no file trans.dat
 
ln -sf ../../topo/trans.dat .
threshold_geocode:  0.1
 
geocode 0.1
P2P 6: GEOCODE.CSH - END
P2P 7: p2p_processing FINISHED
